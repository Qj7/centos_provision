#!/usr/bin/env powscript


assert_server_configuration_relevant()
  debug 'Ensure configs has been genereated by relevant installer'
  if isset $SKIP_CHECKS
    debug "SKIP: Ð°ctual check of installer version in ${INVENTORY_FILE} disabled"
  else
    installed_version=$(detect_installed_version)
    if "${RELEASE_VERSION}" == "${installed_version}"
      debug "Configs has been generated by recent version of installer ${RELEASE_VERSION}"
    else
      local tool_url="${KEITARO_URL}/release-${installed_version}/${TOOL_NAME}.sh"
      local tool_args="${TOOL_ARGS}"
      if "${TOOL_NAME}" == "add-site"
        if "${installed_version}" < "1.3"
          fail "$(build_upgrade_message($installed_version))"
        else
          tool_args="-d ${VARS['site_domains']} -r ${VARS['site_root']} ${TOOL_ARGS}"
      if "${TOOL_NAME}" == "enable-ssl"
        tool_args="-wa ${TOOL_ARGS}"
      command="curl -fsSL ${tool_url} | bash -s -- ${tool_args}"
      run_command "${command}" "Run obsolete ${TOOL_NAME} (v${installed_version})"
      exit


detect_installed_version()
  local version=""
  if is_file_exist ${INVENTORY_FILE}
    version=$(grep "^installer_version=" ${INVENTORY_FILE} | sed s/^installer_version=//g)
  if empty $version
    version="0.9"
  echo $version


build_upgrade_message(installed_version)
  translate 'errors.upgrade_server' "installed_version=${installed_version}"
