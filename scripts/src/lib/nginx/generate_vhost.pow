#!/usr/bin/env powscript


generate_vhost(domain)
  shift
  debug "Generate vhost by ${TOOL_NAME} for domain $domain"
  local vhost_path="$(get_vhost_path $domain)"
  if nginx_vhost_already_processed $vhost_path
    print_with_color "$(translate 'messages.skip_nginx_conf_generation')" "yellow"
  else
    local commands="$(get_vhost_generating_commands "${vhost_path}" "${@}")"
    local message="$(translate "messages.generating_nginx_vhost" "domain=${domain}")"
    run_command $commands $message hide_output


get_vhost_generating_commands(vhost_path)
  shift
  local commands=[]
  local vhost_backup_path="$(get_vhost_backup_path $domain)"
  local vhost_override_path="$(get_vhost_override_path $domain)"
  if nginx_vhost_relevant $vhost_path
    debug "File ${vhost_path} generated by relevant installer tool, skip regenerating"
  else
    if is_file_exist $vhost_path no
      debug "File ${vhost_path} generated by irrelevant installer tool, force regenerating"
      commands+="cp ${vhost_path} ${vhost_backup_path}"
    else
      debug "File ${vhost_path} does not exist, force generating"
    commands+="cp ${NGINX_KEITARO_CONF} ${vhost_path}"
    commands+="touch ${vhost_override_path}"
  sed_expressions="$(nginx_vhost_sed_expressions "${vhost_path}" "${vhost_override_path}" "${@}")"
  commands+="sed -i ${sed_expressions} ${vhost_path}"
  echo "$(join_by " && " "${commands[@]}")"


get_vhost_override_path(domain)
  echo "${NGINX_VHOSTS_DIR}/local/${domain}.inc"


get_vhost_path(domain)
  echo "${NGINX_VHOSTS_DIR}/${domain}.conf"


get_vhost_backup_path(domain)
  echo "${NGINX_VHOSTS_DIR}/${domain}.conf.$(date +%Y%m%d%H%M%S)"


nginx_vhost_sed_expressions(vhost_path, vhost_override_path)
  shift 2
  local expressions=''
  expressions="${expressions} -e '1a# Post-processed by Keitaro ${TOOL_NAME} tool v${RELEASE_VERSION}'"
  if ! is_file_matches $vhost_path "include ${vhost_override_path};" no
    expressions="${expressions} -e '/server.inc;/a\ \ include ${vhost_override_path};'"
  expressions="${expressions} -e 's/listen 80 default_server/listen 80/'"
  expressions="${expressions} -e 's/server_name _/server_name ${domain}/'"
  while isset "${1}"
    expressions="${expressions} -e '${1}'"
    shift
  echo $expressions


nginx_vhost_relevant(vhost_path)
  is_file_matches $vhost_path "# Generated by Keitaro install tool v${RELEASE_VERSION}" "no"


nginx_vhost_already_processed(vhost_path)
  is_file_matches $vhost_path "# Post-processed by Keitaro ${TOOL_NAME} tool v${RELEASE_VERSION}" "no"
