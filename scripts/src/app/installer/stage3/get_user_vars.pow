#!/usr/bin/env powscript


get_user_vars()
  debug 'Read vars from user input'
  hack_stdin_if_pipe_mode
  print_translated "welcome"
  if ! can_install_firewall
    get_user_var 'skip_firewall' 'validate_yes_no'
    if is_no "${VARS['skip_firewall']}"
      fail "$(translate 'errors.cant_install_firewall')"
  get_user_ssl_vars
  get_user_var 'db_restore' 'validate_presence validate_yes_no'
  if is_yes "${VARS['db_restore']}"
    get_user_var_db_restore_path
    get_user_var 'db_restore_salt' 'validate_presence validate_alnumdashdot'
  get_user_var 'db_name' 'validate_presence validate_alnumdashdot validate_starts_with_latin_letter'
  get_user_var 'db_user' 'validate_presence validate_alnumdashdot validate_starts_with_latin_letter'
  get_user_var 'db_password' 'validate_presence validate_alnumdashdot'
  if is_no "${VARS['db_restore']}"
    get_user_var 'admin_login' 'validate_presence validate_alnumdashdot validate_starts_with_latin_letter'
    get_user_var 'admin_password' 'validate_presence validate_alnumdashdot'
  if empty "${VARS['license_ip']}"
    VARS['license_ip']=$(get_host_ip)
  get_user_var 'license_ip' 'validate_presence validate_ip'
  get_user_var 'license_key' 'validate_presence validate_license_key'


get_user_ssl_vars()
  VARS['ssl_certificate']='self-signed'
  get_user_var 'ssl' 'validate_yes_no'
  if is_yes ${VARS['ssl']}
    VARS['ssl_certificate']='letsencrypt'
    get_user_var 'ssl_domains' 'validate_presence validate_domains_list'
    get_user_var 'ssl_email'


get_user_var_db_restore_path()
  get_user_var 'db_restore_path' 'validate_presence validate_file_existence'
  if not is_keitaro_dump_valid ${VARS['db_restore_path']}
    print_prompt_error 'validate_keitaro_dump'
    get_user_var 'db_restore_path_want_exit' 'validate_yes_no'
    if is_yes "${VARS['db_restore_path_want_exit']}"
      fail "$(translate 'errors.keitaro_dump_invalid')"
    else
      get_user_var_db_restore_path


is_keitaro_dump_valid(file)
  local cat_command=''
  local mime_type="$(detect_mime_type ${file})"
  debug "Detected mime type: ${mime_type}"
  if $mime_type == 'application/x-gzip'
    cat_command='zcat'
  else
    cat_command='cat'
  run_command "${cat_command} ${file} | grep -q 'DROP TABLE IF EXISTS \`schema_version\`;'" \
              "$(translate 'messages.check_keitaro_dump_validity')" 'hide_output' 'allow_errors'

can_install_firewall()
  run_command 'iptables -t nat -L' \
              "$(translate 'messages.check_ability_firewall_installing')" 'hide_output' 'allow_errors'
