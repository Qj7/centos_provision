#!/usr/bin/env powscript

SSL_RERUN_COMMAND=""
SSL_SUCCESSFUL_DOMAINS=""
SSL_FAILED_MESSAGE=""

run_ssl_enabler()
  if "${VARS['ssl_certificate']}" == 'letsencrypt'
    local options="-a"                                  # accept LE license agreement
    options="${options} -l ${UI_LANG}"                  # set language
    if "${VARS['ssl_email']}"
      options="${options} -e ${VARS['ssl_email']}"
    else
      options="${options} -w"
    options="${options} ${VARS['ssl_domains']//,/ }"
    local command="curl https://keitarotds.com/enable-ssl.sh -sSL | bash -s -- ${options}"
    message="$(translate 'messages.enabling_ssl')"
    run_command "${command}" "${message}" "hide_output"
    SSL_SUCCESSFUL_DOMAINS="$(extract_domains_from_enable_ssl_log OK)"
    SSL_FAILED_MESSAGE="$(get_message_from_enable_ssl_log NOK)"
    SSL_FAILED_MESSAGE="${SSL_FAILED_MESSAGE/NOK/}"
    SSL_RERUN_COMMAND="${command}"


get_message_from_enable_ssl_log(prefix)
  if is_exists_file enable-ssl.log
    cat enable-ssl.log \
      | tail -n2 \
      | sed -n "/^${prefix}/p"          # get last 2 lines of log and extract only OK/NOK messages


extract_domains_from_enable_ssl_log(prefix)
  get_message_from_enable_ssl_log $prefix \
    sed -e 's/.*: //g' -e 's/,//'   # extract domains list from message

